#!/bin/sh

bats=( "BAT0" "BAT1" )

detailed_stats() {
for bat in /sys/class/power_supply/BAT*; do
	cap=$(cat "${bat}/capacity") || exit
	status=$(cat "${bat}/status")

	total_cap=$(( total_cap + cap ))
	echo "$(basename $bat): ${cap}% - $status"
done
}

# If an argument  is passed, format the output with Pango
case $BLOCK_BUTTON in
	1) notifyd_running && notify-send "$(detailed_stats)" ;;
	3) notifyd_running && notify-send -a 'Battery module' \
		"Left click to show detailed battery status"
		;;
esac

num_bats=$(ls /sys/class/power_supply | grep 'BAT' | wc -l)
# if we don't have batteries, we don't display anything
if $(( num_bats == 0 )); then
	exit 0
fi

total_cap=0
charging=false
for bat in /sys/class/power_supply/BAT*; do

	cap=$(cat "${bat}/capacity") || exit
	status=$(cat "${bat}/status")

	total_cap=$(( total_cap + cap ))

	# If any one of the batteries is charging, we want to indicate the charging status
	[ $status == "Charging" ] && charging=true
done

avg_cap=$(( total_cap / num_bats ))

if [[ $charging == true ]]; then
	echo "   ${avg_cap}%  "
else
	echo "   ${avg_cap}%"
fi
