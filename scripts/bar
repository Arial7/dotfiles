#!/bin/sh

# Check if any lemonbar is running and kill it
if pgrep -xo lemonbar > /dev/null; then
	pkill -xo lemonbar
fi

source $HOME/.scripts/colors.sh

# Panel variables
panel_height=30
panel_fifo="/tmp/panel_fifo"
panel_wmname="Panel"

block_sep=" "

block() {
	fgc=$1
	bgc=$2
	icon=$3
	cmd=$4
	echo -n "%{F$fgc B$bgc}  $icon  %{F- B-}  $cmd    "
}

status_infos() {
	echo -n -e 'S'
	workspaces
	echo -n -e "%{r}" # right
	block ${colors[0]} ${colors[1]}   "$(volume get)"
	block ${colors[0]} ${colors[4]}   "$($HOME/.scripts/statusbar/wifi)"
	block ${colors[0]} ${colors[2]}   "$($HOME/.scripts/statusbar/ethernet)"
	block ${colors[0]} ${colors[5]}   "$($HOME/.scripts/statusbar/battery)"
	block ${colors[0]} ${colors[3]}   "$(date +'%a %d %b')"
	block ${colors[0]} ${colors[3]}   "$(date +'%H:%M')"

}

statusbar() {
}

statusbar < "$panel_fifo" | lemonbar -p \
		-f 'Google Sans:size=11' -f 'FontAwesome:size=14' \
		-B ${colors[0]} -F ${colors[7]} \
		-g "x${panel_height}" -n "$panel_wmname" &

# Hide the panel when windows are in fullscreen mode.
# This is stolen from https://gitlab.com/protesilaos/dotfiles/blob/master/bin/bin/melonpanel.
# TODO: Play with the sleep value
until bar_id=$(xdo id -a "$panel_wmname"); do
	sleep 2s
done

xdo below -t $(xdo id -n root) $bar_id &
