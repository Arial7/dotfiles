#!/bin/sh

# Script to increment/decrement backlight brightness
# This script assumes that the current user can write to the according files in
# /sys/class/backlight/*
# Note that this probably only works with 1 dimmable screen, however it _should_ work with GPU's of
# every manufacturer (Intel/AMD/Nvidia)

BRIGHTNESS_STEPS='10'

usage() {
	cat << EOH
brightness is a utility for modifying and querying the backlight brightness.
usage: brightness <command>, where <command> is one of:

increment [value]    increments the brightness by [value] steps
decrement [value]    decrements the brightness by [value] steps
get                  returns the current brightness in percent
help                 print this help text

Each command can be abbreviated to its shortest unique form.
There are $BRIGHTNESS_STEPS brightness steps available.
EOH
}

get_brightness() {
	local max curr
	max=$(cat /sys/class/backlight/*/max_brightness)
	curr=$(cat /sys/class/backlight/*/brightness)
	echo $(bc <<< "scale=2; (100 / $max) * $curr" | cut -d '.' -f 1)
}

update_brightness() {
	local delta max_brightness current step_size new
	delta=$1
	max_brightness=$(cat /sys/class/backlight/*/max_brightness | head -n1)
	step_size=$((max_brightness / BRIGHTNESS_STEPS))
	curr=$(cat /sys/class/backlight/*/brightness | head -n1)
	new=$((curr + delta))
	for f in /sys/class/backlight/*/brightness; do
		if $((new > max_brightness)); then
			echo $max_brightness > $f
		else
			echo $((new)) > $f
		fi
	done
	notifyd_running && notify-send -a 'Brightness' \
		"Brightness: $(get_brightness)%"
}

case $1 in
	i*)
		val=$2
		update_brightness $val
		;;
	d*)
		val=$2
		update_brightness "-$val"
		;;
	g*)
		get_brightness
		;;
	h*)
		usage
		exit 0
		;;
	--help)
		usage
		exit 0
		;;
	*)
		usage
		exit 1
		;;
esac
