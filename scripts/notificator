#!/bin/zsh

# AUTHOR: Pascal 'Arial7' Riesinger <riesinger.pascal@gmail.com>
# LICENSE: MIT
#
# Thanks to https://www.reddit.com/user/bronx_warrior for his amazing dotfiles, which influenced
# this script A LOT! You are awesome!
#
# This script handles incoming notifications via the named pipe at /tmp/notify_fifo_northeast
# by creating a lemonbar showing the notification text.
#
# FORMATTING:
#   Notifications can be formatted using a ſ-separated list of options (as no one I know ever
#   used the ſ character somewhere (it can be inputted using <alt gr>+<s>))
#   The string written to the fifo should look like the following:
#
#   <notification text>[ſ<timeout>ſ<center>]
#
#   where:
#     <timeout> - Time in s before removin the notification, default is 3s
#     <center> - Show a larger bar in the center of the screen (used for volume indicators)
#
#


# initialize the xrandr output if this hasn't been done yet
if [ ! -f /tmp/xrandr_output ]; then
  echo "Creating xrandr_output"
  xrandr > /tmp/xrandr_output
fi

# initialize the main fifo for sending notifications
if [ ! -p /tmp/notify_fifo_northeast ]; then
  echo "Creating main fifo"
  mkfifo "/tmp/notify_fifo_northeast"
fi

xrandr_output=$(cat /tmp/xrandr_output)

monitor_x=$(echo "$xrandr_output" | grep "primary" | awk '{print $4}' | awk -F+ '{print $2}')
monitor_y=$(echo "$xrandr_output" | grep "primary" | awk '{print $4}' | awk -F+ '{print $3}')
monitor_width=$(echo "$xrandr_output" | grep "primary" | awk -F'[ x+]' '{print $4}')
monitor_height=$(echo "$xrandr_output" | grep "primary" | awk -F'[ x+]' '{print $5}')

default_fontsize=12

padding_x="32"
padding_y="32"
margin_x="32"
margin_y="32"

# We want a line-height of 2
height=$((default_fontsize * 2))

font="Ubuntu Mono:size=$default_fontsize"
icon_font="FontAwesome:size=$default_fontsize"

color_fg="#ffffff"
color_bg="#5c545b"

dismiss_time=3

default_corner="northeast"

current_bar_count=0

function dismiss {
  kill $(cat $(get_pidfile $1))
  current_bar_count=$(( current_bar_count-- ))
}

function get_pidfile {
  echo "/dev/shm/notificator_"$corner"_"$i"_pid"
}


# get_bar_options returns a lemonbar option string
# usage: get_bar_options <text-width> <notification-i>
# TODO: handle more corners
function get_bar_options {
  bar_width=$((${1} + 2 * padding_x))
  bar_height=$((height + 2 * padding_y))

  bar_offset=$((bar_height * ${2}))

  bar_name="notificator_bar_0"
  bar_x=$((monitor_width + monitor_x - bar_width - margin_x))
  bar_y=$((margin_y + bar_offset))
  echo "x: $bar_x, y: $bar_y, w: $bar_width, h: $bar_height, my: $margin_y, o: $bar_offset"  > /tmp/debug

  echo "-d -p -g ${bar_width}x${bar_height}+${bar_x}+${bar_y} -B $color_bg -f $font -f $icon_font -n $bar_name"
}

# TODO: read more corners
tail -f "/tmp/notify_fifo_northeast" | while read line; do
  current_bar_count=$(( current_bar_count++ ))
  text_width=$(txtw -f $font "$line")
  echo "%{c}%{F$color_fg}$line" | lemonbar $(get_bar_options $text_width $current_bar_count) &
  echo $! > $(get_pidfile $current_bar_count)
  (sleep $dismiss_time; dismiss) &


done
